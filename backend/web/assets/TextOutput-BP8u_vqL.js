import{I as w,c as n,W as I,a1 as C,s as b,l as A,q as M,N as u,b as c,f as y,G as k,g as h,F as L,C as B,z as j,y as f,T as V,A as O,m as N,an as z,X as T,ao as W}from"./index-BK2R8M7z.js";import{A as F}from"./Time-M-IDJqHi.js";const U=w("lightning",!0,function(e){return n("svg",{width:e.size,height:e.size,viewBox:"0 0 48 48",fill:"none"},[n("path",{d:"M19 4H37L26 18H41L17 44L22 25H8L19 4Z",fill:e.colors[1],stroke:e.colors[0],"stroke-width":e.strokeWidth,"stroke-linejoin":e.strokeLinejoin},null)])}),S=w("reduce-one",!1,function(e){return n("svg",{width:e.size,height:e.size,viewBox:"0 0 48 48",fill:"none"},[n("path",{d:"M24 44C35.0457 44 44 35.0457 44 24C44 12.9543 35.0457 4 24 4C12.9543 4 4 12.9543 4 24C4 35.0457 12.9543 44 24 44Z",fill:e.colors[1],stroke:e.colors[0],"stroke-width":e.strokeWidth,"stroke-linejoin":e.strokeLinejoin},null),n("path",{d:"M16 24L32 24",stroke:e.colors[2],"stroke-width":e.strokeWidth,"stroke-linecap":e.strokeLinecap,"stroke-linejoin":e.strokeLinejoin},null)])}),$={__name:"TemperatureInput",props:{modelValue:{},modelModifiers:{}},emits:["update:modelValue"],setup(e){const{t}=I(),a=C(e,"modelValue"),d=b([t("components.nodes.llms.OpenAI.creative"),t("components.nodes.llms.OpenAI.balanced"),t("components.nodes.llms.OpenAI.precise")]),s=A(t("components.nodes.llms.OpenAI.balanced")),i=b([.8,.5,.2]),r=o=>{s.value=o,d.forEach((l,p)=>{l===o&&(a.value=i[p])})},m=o=>{o>=0&&o<=.3?s.value=t("components.nodes.llms.OpenAI.precise"):o>.3&&o<=.7?s.value=t("components.nodes.llms.OpenAI.balanced"):o>.7&&o<=1&&(s.value=t("components.nodes.llms.OpenAI.creative"))};return M(()=>{m(a.value)}),(o,l)=>{const p=u("a-segmented"),v=u("a-input-number");return c(),y("div",null,[n(p,{value:s.value,"onUpdate:value":l[0]||(l[0]=_=>s.value=_),options:d,block:"",onChange:r},null,8,["value","options"]),n(v,{style:{width:"100%"},value:a.value,"onUpdate:value":l[1]||(l[1]=_=>a.value=_),step:.1,max:1,min:0,keyboard:!1,onChange:m},null,8,["value"])])}}},D={style:{display:"flex",gap:"5px"}},E={__name:"ListFieldUse",props:{modelValue:{},modelModifiers:{}},emits:["update:modelValue"],setup(e){const t=C(e,"modelValue"),{t:a}=I(),d=()=>{t.value.push("")},s=(r,m)=>{t.value[m]=r},i=r=>{t.value.splice(r,1)};return(r,m)=>{const o=u("a-input"),l=u("a-col"),p=u("a-button"),v=u("a-row");return c(),k(v,{type:"flex",gutter:[12,12]},{default:h(()=>[(c(!0),y(L,null,B(t.value,(_,g)=>(c(),k(l,{span:24,key:g},{default:h(()=>[j("div",D,[n(o,{value:_,onInput:x=>s(x.target.value,g)},null,8,["value","onInput"]),n(f(S),{onClick:x=>i(g)},null,8,["onClick"])])]),_:2},1024))),128)),n(l,{span:24},{default:h(()=>[n(p,{type:"dashed",style:{width:"100%"},onClick:d},{default:h(()=>[n(f(F)),V(" "+O(f(a)("components.nodes.listField.add_item")),1)]),_:1})]),_:1})]),_:1})}}},R={__name:"TextOutput",props:{text:{type:String,default:""},renderMarkdown:{type:Boolean,default:!1}},setup(e){const t=e,a=N(()=>typeof t.text=="string"?t.text:JSON.stringify(t.text));return(d,s)=>{const i=u("a-typography-paragraph"),r=z("highlight");return e.renderMarkdown?(c(),y(L,{key:0},[T(n(f(W),{source:a.value,class:"markdown-body custom-hljs"},null,8,["source"]),[[r]]),n(i,{copyable:{text:a.value}},null,8,["copyable"])],64)):(c(),k(i,{key:1,copyable:{text:a.value}},{default:h(()=>[V(O(a.value),1)]),_:1},8,["copyable"]))}}};export{U as L,S as R,$ as _,E as a,R as b};
