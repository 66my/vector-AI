import{aL as a,d as f}from"./index-BVaY_PMd.js";import{f as t}from"./util-Dhsj7fS-.js";async function i(s,e){return await a(`workflow__${s}`,e)}async function u(s,e){return await a(`workflow_template__${s}`,e)}async function k(s,e){return await a(`workflow_tag__${s}`,e)}async function n(s,e){return await a(`workflow_run_record__${s}`,e)}const W=f("userWorkflows",{state:()=>({userWorkflows:JSON.parse(localStorage.getItem("userWorkflows")||"[]"),userWorkflowsTotal:parseInt(localStorage.getItem("userWorkflowsTotal"))||0,userFastAccessWorkflows:JSON.parse(localStorage.getItem("userFastAccessWorkflows")||"[]"),diagnosisRecord:null,refreshTime:0}),actions:{setUserWorkflowsTotal(s){this.userWorkflowsTotal=s,localStorage.setItem("userWorkflowsTotal",this.userWorkflowsTotal)},setUserWorkflows(s,e=!1){e?(this.userFastAccessWorkflows=s,localStorage.setItem("userFastAccessWorkflows",JSON.stringify(this.userFastAccessWorkflows))):(this.userWorkflows=s,localStorage.setItem("userWorkflows",JSON.stringify(this.userWorkflows)))},updateUserWorkflow(s,e=!1){e?(this.userFastAccessWorkflows=this.userFastAccessWorkflows.map(o=>o.wid===s.wid?s:o),localStorage.setItem("userFastAccessWorkflows",JSON.stringify(this.userFastAccessWorkflows))):(this.userWorkflows=this.userWorkflows.map(o=>o.wid===s.wid?s:o),localStorage.setItem("userWorkflows",JSON.stringify(this.userWorkflows)))},addUserWorkflow(s,e=!1){e?(this.userFastAccessWorkflows.unshift(s),localStorage.setItem("userFastAccessWorkflows",JSON.stringify(this.userFastAccessWorkflows))):(this.userWorkflows.unshift(s),localStorage.setItem("userWorkflows",JSON.stringify(this.userWorkflows)))},deleteUserWorkflow(s,e=!1){e?(this.userFastAccessWorkflows=this.userFastAccessWorkflows.filter(o=>o.wid!==s),localStorage.setItem("userFastAccessWorkflows",JSON.stringify(this.userFastAccessWorkflows))):(this.userWorkflows=this.userWorkflows.filter(o=>o.wid!==s),localStorage.setItem("userWorkflows",JSON.stringify(this.userWorkflows)))},setDiagnosisRecord(s){this.diagnosisRecord=s},async refreshWorkflows(s=!0){if(Date.now()-this.refreshTime<2e3)return;this.refreshTime=Date.now();const e=await i("list",{need_fast_access:s});if(e.status==200){const o=e.data.workflows.map(r=>(r.create_time=t(r.create_time),r.update_time=t(r.update_time),r.key=r.wid,r));this.setUserWorkflows(o);const l=e.data.fast_access_workflows.map(r=>(r.create_time=t(r.create_time),r.update_time=t(r.update_time),r.key=r.wid,r));this.setUserWorkflows(l,!0),this.setUserWorkflowsTotal(e.data.total)}else console.error(e.msg)}}});export{i as a,n as b,u as c,W as u,k as w};
